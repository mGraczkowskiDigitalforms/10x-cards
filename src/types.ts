/*
 DTO and Command Model definitions for the flashcards application API

 This file contains interfaces for Data Transfer Objects (DTOs) and Command Models
 used in the API endpoints. Many of these types are directly derived from the underlying
 database models defined in src/db/database.types.ts. We use TypeScript utility types
 such as Omit and Pick to ensure consistency with the database schema, while also
 applying necessary restrictions based on the API plan.
*/

// Import the Database type from the database models
import type { Database } from "./db/database.types";
import type { SupabaseClient, User } from "@supabase/supabase-js";

// Define reusable types based on the database models
export type Flashcard = Database["public"]["Tables"]["flashcards"]["Row"];
export type Generation = Database["public"]["Tables"]["generations"]["Row"];
export type GenerationErrorLog = Database["public"]["Tables"]["generation_error_logs"]["Row"];
export type FlashcardInsert = Database["public"]["Tables"]["flashcards"]["Insert"];

/**
 * FlashcardDto represents a flashcard data transfer object used in API responses.
 * It contains all flashcard fields except user_id which is excluded for security reasons.
 * The type is derived from the database Flashcard model using TypeScript's Pick utility type.
 */
export type FlashcardDto = Pick<
  Flashcard,
  "id" | "front" | "back" | "source" | "generation_id" | "created_at" | "updated_at"
>;

/**
 * PaginationDto is used in paginated responses to convey page, limit, and total count.
 */
export interface PaginationDto {
  page: number;
  limit: number;
  total: number;
}

/**
 * FlashcardsListDto represents the response structure for a list of flashcards with pagination.
 */
export interface FlashcardsListDto {
  flashcards: FlashcardDto[];
  pagination: PaginationDto;
}

/**
 * Represents the possible sources of a flashcard
 */
export type FlashcardSource = "ai-full" | "ai-edited" | "manual";

/**
 * FlashcardCreateDto defines the required properties to create a flashcard.
 * Note: When 'source' is 'ai-full' or 'ai-edited', the 'generation_id' should be provided.
 */
export interface FlashcardCreateDto {
  front: string;
  back: string;
  source: FlashcardSource;
  generation_id: number | null;
}

/**
 * CreateFlashcardsCommand wraps an array of flashcards to be created in a single request.
 */
export interface CreateFlashcardsCommand {
  flashcards: FlashcardCreateDto[];
}

/**
 * UpdateFlashcardDto defines the properties that can be updated for an existing flashcard.
 * The 'source' field can be any valid FlashcardSource value.
 */
export interface UpdateFlashcardDto {
  front: string;
  back: string;
  source: FlashcardSource;
  generation_id: number | null;
}

/**
 * GenerateFlashcardsCommand defines the request payload for generating flashcards.
 * The 'text' field should contain between 1000 and 10000 characters.
 */
export interface GenerateFlashcardsCommand {
  text: string;
}

/**
 * GenerationDto represents the minimal details of an AI generation event.
 * It is derived from the database model using Pick to select specific fields.
 */
export type GenerationDto = Pick<Generation, "id" | "generated_count" | "created_at">;

/**
 * FlashcardProposalDto represents a flashcard proposal generated by AI before user confirmation.
 */
export interface FlashcardProposalDto {
  front: string;
  back: string;
  source: "ai-full";
}

/**
 * GenerationCreateResponseDto represents the response from the flashcard generation endpoint.
 * Contains metadata about the generation event (model used, counts, etc.) and an array of
 * AI-generated flashcard proposals that can be reviewed and edited by the user before saving.
 */
export interface GenerationCreateResponseDto {
  generation: GenerationDto;
  flashcards_proposal: FlashcardProposalDto[];
}

/**
 * GenerationDetailsDto extends GenerationDto by including associated flashcards.
 * Flashcards array is optional and may be undefined if no flashcards are associated.
 */
export interface GenerationDetailsDto extends GenerationDto {
  flashcards?: FlashcardDto[];
}

/**
 * GenerationErrorLogDto represents an individual generation error log entry.
 */
export type GenerationErrorLogDto = Pick<
  GenerationErrorLog,
  "id" | "user_id" | "error_code" | "error_message" | "source_text_length" | "source_text_hash" | "model" | "created_at"
>;

// Locals types
export interface AstroLocals {
  supabase: SupabaseClient<Database>;
  user: User | null;
}
